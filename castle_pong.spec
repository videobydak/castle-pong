# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['main.py'],
    pathex=[],
    binaries=[],
    datas=[
        # Font file
        ('PressStart2P-Regular.ttf', '.'),
        
        # Music files
        ('menu.mp3', '.'),
        ('Untitled.mp3', '.'),
        ('Untitled2.mp3', '.'),
        ('Untitled3.mp3', '.'),
        ('Untitled4.mp3', '.'),
        ('Untitled5.mp3', '.'),
        ('Untitled6.mp3', '.'),
        ('victory.mp3', '.'),
        
        # Sound effects - WAV files
        ('Alberto Sueri - 8 Bit Fun - Quick Whoosh Gritty .wav', '.'),
        ('Artlist Original - 8 Bits and Pieces - Noise Fire Shot.wav', '.'),
        ('EOS - New UI Item.wav', '.'),
        ('EOS - No Bonus.wav', '.'),
        ('EOS - Scoring High.wav', '.'),
        ('EOS - Scoring Normal.wav', '.'),
        ('EOS - Scoring.wav', '.'),
        ('EOS - Yes Bonus.wav', '.'),
        ('Glitchedtones - User Interface - 8 Bit Arpeggio Bright.wav', '.'),
        ('Ni Sound - Interfacing - 8-Bit Hit Crushed Dull.wav', '.'),
        ('Sound Response - 8 Bit Jingles - Glide up Win.wav', '.'),
        ('Sound Response - 8 Bit Retro - Arcade Blip.wav', '.'),
        ('Sound Response - 8 Bit Retro - Pixelated Explosion Direct Hit.wav', '.'),
        ('Sound Response - 8 Bit Retro - Pulsating Arcade Glitch 2.wav', '.'),
        ('Sound Response - 8 Bit Retro - Slide Down Game Over.wav', '.'),
        ('SoundCrib - Game Coin Collector - Metallic Clink 02.wav', '.'),
        
        # Sound effects - AAC files
        ('Glitchedtones - User Interface - 8 Bit Arpeggio Bright.aac', '.'),
        ('Ni Sound - Interfacing - 8-Bit Hit Crushed Dull.aac', '.'),
        ('Sound Response - 8 Bit Retro - Arcade Blip.aac', '.'),
        ('Sound Response - 8 Bit Retro - Pixelated Explosion Direct Hit.aac', '.'),
        
        # License file
        ('OFL.txt', '.'),
    ],
    hiddenimports=[
        'scipy._lib.messagestream',
        'scipy._cyutility',
        'scipy.special._ufuncs_cxx',
        'scipy.special._cdflib',
        'scipy.linalg._cythonized_array_utils',
        'scipy.ndimage._nd_image',
        'scipy.ndimage._ni_support',
        'scipy.ndimage._interpolation',
        'scipy.sparse.csgraph._validation',
        'scipy.sparse._matrix',
        'scipy.sparse._sparsetools',
        'scipy.integrate._ode',
        'scipy.integrate._quadpack',
        'scipy.integrate._dop',
        'scipy.optimize._minpack',
        'scipy.optimize._zeros',
        'scipy.optimize._lbfgsb',
        'scipy.optimize._cobyla',
        'scipy.optimize._slsqp',
        'scipy.optimize._nnls',
        'scipy.optimize._group_columns',
        'scipy.optimize._trlib',
        'scipy.optimize._trustregion',
        'scipy.optimize._lsq',
        'scipy.optimize._differentialevolution',
        'scipy.optimize._basinhopping',
        'scipy.optimize._dual_annealing',
        'scipy.optimize._shgo',
        'scipy.optimize._numdiff',
        'scipy.optimize._hessian_update_strategy',
        'scipy.optimize._constraints',
        'scipy.optimize._optimize',
        'scipy.optimize._bglu_dense',
        'scipy.optimize._lsap',
        'scipy.optimize._hungarian',
        'scipy.optimize._linprog_util',
        'scipy.optimize._highs',
        'scipy.signal._peak_finding_utils',
        'scipy.signal._spectral',
        'scipy.signal._max_len_seq_inner',
        'scipy.signal._upfirdn_apply',
        'scipy.signal._spline',
        'scipy.signal._sosfilt',
        'scipy.signal._sigtools',
        'scipy.signal._filter_design',
        'scipy.signal._fir_filter_design',
        'scipy.signal._ltisys',
        'scipy.signal._waveforms',
        'scipy.signal._bsplines',
        'scipy.signal._wavelets',
        'scipy.signal._czt',
        'scipy.signal.windows._windows',
        'scipy.stats._stats',
        'scipy.stats._continuous_distns',
        'scipy.stats._discrete_distns',
        'scipy.stats._distn_infrastructure',
        'scipy.stats._tukeylambda_stats',
        'scipy.stats._ksstats',
        'scipy.stats._levy_stable',
        'scipy.stats._mannwhitneyu',
        'scipy.stats._ansari',
        'scipy.stats._wilcoxon',
        'scipy.stats._morestats',
        'scipy.stats._binned_statistic',
        'scipy.stats._qmc',
        'scipy.stats._qmc_cy',
        'scipy.stats._sobol',
        'scipy.stats._halton',
        'scipy.stats._latin_hypercube',
        'scipy.stats._poisson_disc',
        'scipy.stats._multivariate',
        'scipy.stats._contingency',
        'scipy.stats._hypotests',
        'scipy.stats._page_trend_test',
        'scipy.stats._crosstab',
        'scipy.stats._rcont',
        'scipy.stats._rvs_sampling',
        'scipy.stats._unuran',
        'scipy.stats._biasedurn',
        'scipy.stats._entropy',
        'scipy.stats._fit',
        'scipy.stats._bootstrap',
        'scipy.stats._resampling',
        'scipy.stats._permutation_test_methods',
        'scipy.stats._axis_nan_policy',
        'scipy.stats._warnings_errors',
        'scipy.stats._common',
        'scipy.stats._censored_data',
        'scipy.stats._survival',
        'scipy.stats._result_classes',
        'scipy.stats._kde',
        'scipy.stats._mstats_basic',
        'scipy.stats._mstats_extras',
        'scipy.stats._mgc',
        'scipy.stats._sensitivity_analysis',
        'scipy.stats._directional_stats',
        'scipy.stats._quasi_monte_carlo',
        'scipy.stats._odds_ratio',
        'scipy.stats._relative_risk',
        'scipy.stats._fisher_exact',
        'scipy.stats._barnard_exact',
        'scipy.stats._boschloo_exact',
        'scipy.stats._cramervonmises',
        'scipy.stats._epps_singleton',
        'scipy.stats._anderson_ksamp',
        'scipy.stats._kruskal',
        'scipy.stats._friedmanchisquare',
        'scipy.stats._fligner',
        'scipy.stats._levene',
        'scipy.stats._bartlett',
        'scipy.stats._shapiro',
        'scipy.stats._jarque_bera',
        'scipy.stats._normaltest',
        'scipy.stats._skewtest',
        'scipy.stats._kurtosistest',
        'scipy.stats._ttest',
        'scipy.stats._power',
        'scipy.stats._equivalence',
        'scipy.stats._crosstab',
        'scipy.stats._goodness_of_fit',
        'scipy.stats._variation',
        'scipy.stats._energy_distance',
        'scipy.stats._wasserstein_distance',
        'scipy.interpolate._fitpack',
        'scipy.interpolate._dfitpack',
        'scipy.interpolate._bsplines',
        'scipy.interpolate._ppoly',
        'scipy.interpolate._cubic',
        'scipy.interpolate._interpolate',
        'scipy.interpolate._polyint',
        'scipy.interpolate._rbfinterp',
        'scipy.interpolate._rbf',
        'scipy.interpolate._ndgriddata',
        'scipy.interpolate._rgi',
        'scipy.interpolate._pade',
        'scipy.fft._basic',
        'scipy.fft._helper',
        'scipy.fft._realtransforms',
        'scipy.fft._fftlog',
        'scipy.fft._backends',
        'scipy.fft._backend_utils',
        'scipy.fft._pocketfft',
        'numpy.core',
        'numpy.core._multiarray_umath',
        'numpy.random._pickle',
        'numpy.random._common',
        'numpy.random._generator',
        'numpy.random._mt19937',
        'numpy.random._philox',
        'numpy.random._pcg64',
        'numpy.random._sfc64',
        'numpy.random.bit_generator',
        'numpy.random.mtrand',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='CastlePong',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
) 